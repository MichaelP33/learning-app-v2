import fs from "fs";
import path from "path";

const root =
  "/Users/michaelpotteiger/software development learnign app/learning-app-v2";
const quizzesDir = path.join(root, "data/quizzes");
const outPath = path.join(root, "src/lib/generated-quizzes.ts");

// Ensure quizzes dir exists
if (!fs.existsSync(quizzesDir)) {
  fs.mkdirSync(quizzesDir, { recursive: true });
}

function kebabBase(filename) {
  return filename.replace(/\.json$/i, "");
}

const files = fs
  .readdirSync(quizzesDir)
  .filter((f) => f.toLowerCase().endsWith(".json"));

const entries = [];
for (const file of files) {
  const articleId = kebabBase(file);
  const full = path.join(quizzesDir, file);
  try {
    const json = JSON.parse(fs.readFileSync(full, "utf8"));
    entries.push({ id: articleId, data: json });
  } catch (e) {
    console.warn(`Skipping invalid quiz file: ${file} (${e?.message || e})`);
  }
}

const body = entries
  .map((e) => `  ${JSON.stringify(e.id)}: ${JSON.stringify(e.data, null, 2)}`)
  .join(",\n");

const content = `import type { Quiz } from "@/types";

// AUTO-GENERATED by scripts/generate-quizzes-registry.mjs
export const externalQuizzes: Record<string, Quiz> = {
${body}
};
`;

fs.writeFileSync(outPath, content);
console.log(
  `Generated quizzes registry with ${entries.length} entr${
    entries.length === 1 ? "y" : "ies"
  } at ${outPath}`
);
